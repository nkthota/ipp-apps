<!doctype html>

<!--
  ___                 ___           ___           ___
  /  /\                     /__/\         /  /\         /  /\
  /  /:/_                    \  \:\       /  /:/        /  /::\
  /  /:/ /\  ___     ___       \  \:\     /  /:/        /  /:/\:\
  /  /:/ /:/ /__/\   /  /\  ___  \  \:\   /  /:/  ___   /  /:/  \:\
  /__/:/ /:/  \  \:\ /  /:/ /__/\  \__\:\ /__/:/  /  /\ /__/:/ \__\:\
  \  \:\/:/    \  \:\  /:/  \  \:\ /  /:/ \  \:\ /  /:/ \  \:\ /  /:/
  \  \::/      \  \:\/:/    \  \:\  /:/   \  \:\  /:/   \  \:\  /:/
  \  \:\       \  \::/      \  \:\/:/     \  \:\/:/     \  \:\/:/
  \  \:\       \__\/        \  \::/       \  \::/       \  \::/
  \__\/                     \__\/         \__\/         \__\/

  --------------------------------------------------------------------
  #  Stiletto v3.2.0
  #  Documentation: https://fluorescent.co/help/stiletto/
  #  Purchase: https://themes.shopify.com/themes/stiletto/
  #  A product by Fluorescent: https://fluorescent.co/
  --------------------------------------------------------------------
-->
<html
  class="no-js"
  lang="{{ request.locale.iso_code }}"
  style="--announcement-height: 1px;">
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    {% render 'meta-description' %}

    <link rel="canonical" href="{{ canonical_url }}">
    <link
      rel="preconnect"
      href="https://cdn.shopify.com"
      crossorigin>

    {%- if settings.favicon != blank -%}
      <link
        rel="shortcut icon"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
        type="image/png">
    {%- endif -%}

    {%- capture seo_title -%}
          {%- if request.page_type == 'search' and search.performed == true -%}
            {{ 'search.heading' | t: count: search.results_count }}:
            {{ 'search.results_with_count' | t: terms: search.terms, count: search.results_count }}
          {%- else -%}
            {{ page_title }}
          {%- endif -%}
          {%- if current_tags -%}
            {%- assign meta_tags = current_tags | join: ', ' -%}
            &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
          {%- endif -%}
          {%- if current_page != 1 -%}
            &ndash; {{ 'general.meta.page' | t: page: current_page }}
          {%- endif -%}
          {%- assign escaped_page_title = page_title | escape -%}
          {%- unless escaped_page_title contains shop.name -%}
            &ndash; {{ shop.name }}
          {%- endunless -%}
        {%- endcapture -%}
    <title>{{ seo_title | strip }}</title>

    {% render 'social-meta-tags' %}

    {% render 'theme-setup' %}
    {% render 'theme-setting-vars' %}
    {%- render 'theme-globals' -%}
    {{ 'nsd-enhanced.css' | asset_url | stylesheet_tag }}

    {{ content_for_header }}
  </head>

  <body class="template-{{ request.page_type | handle }}">
    <div class="page">
      {% if settings.enable_page_transitions %}
        {% render 'page-transition-overlay' %}
      {% endif %}

      <div class="theme-editor-scroll-offset"></div>

      <div class="header__space" data-header-space></div>

      {% sections 'header-group' %}
      {% sections 'overlay-group' %}

      {%- if settings.enable_quick_search -%}
        {% render 'quick-search' %}
      {%- endif -%}

      <div class="header-overlay" data-header-overlay>
        <div class="header-overlay__inner"></div>
      </div>

      <main id="main" class="main">
        {{ content_for_layout }}
      </main>

      {% sections 'footer-group' %}

      {% render 'store-availability-drawer' %}
      {% render 'quick-view-modal' %}
      {% render 'modal' %}
      {% render 'back-to-top' %}
    </div>

    {{ '//www.youtube.com/iframe_api' | script_tag }}
    {{ '//cdn.shopify.com/shopifycloud/shopify-plyr/v1.0/shopify-plyr.css' | stylesheet_tag }}
    {{ 'nsd-enhanced.js' | asset_url | script_tag }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
          
          const buttons = document.querySelectorAll('.addPicksBtn');
          const draftbuttons = document.querySelectorAll('.draftPicksBtn');
          const tagbuttons = document.querySelectorAll('.tagPicksBtn');
          const addtagbuttons = document.querySelectorAll('.addtagPicksBtn');
          const addCollectionbuttons = document.querySelectorAll('.addCollectionPicksBtn');
          
          // Add click event listener to each button
          buttons.forEach(button => {
            button.addEventListener('click', function() {
              // Get the product ID from the data-product-id attribute
              const productId = this.getAttribute('data-product-id')
              
              // Call the function with the product ID as parameter
              AddPick(productId);
            });
          });
          
          draftbuttons.forEach(button => {
            button.addEventListener('click', function() {
              // Get the product ID from the data-product-id attribute
              const productId = this.getAttribute('data-product-id')
              
              // Call the function with the product ID as parameter
              DraftPick(productId);
            });
          });
          
          tagbuttons.forEach(button => {
            button.addEventListener('click', function() {
              // Get the product ID from the data-product-id attribute
              const productId = this.getAttribute('data-product-id')
              
              // Call the function with the product ID as parameter
              TagRemove(productId);
            });
          });
          
          addtagbuttons.forEach(button => {
            button.addEventListener('click', function() {
              // Get the product ID from the data-product-id attribute
              const productId = this.getAttribute('data-product-id')
              
              // Call the function with the product ID as parameter
              TagAdd(productId);
            });
          });
      
          addCollectionbuttons.forEach(button => {
            button.addEventListener('click', function() {
              // Get the product ID from the data-product-id attribute
              const productId = this.getAttribute('data-product-id')
              
              // Call the function with the product ID as parameter
              CollectionAdd(productId);
            });
          });
          
          function AddPick(productId)
            {
              var spanElement = document.getElementById(`${productId}-message`);	
              spanElement.innerText = 'Message: Adding';
              var xhr = new XMLHttpRequest();
                xhr.addEventListener("readystatechange", function() {
                  if(this.readyState === 4) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Added';
                    } else {
                      // Request failed or returned an error (status code not in 2xx range)
                      console.error('Request failed:', xhr.status);
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Error while adding';
                    }
                  }
                });
            
                xhr.open("PUT", `https://ipp-apps.onrender.com/update-product-metafield/${productId}`);
                xhr.send();
            }
          
            function DraftPick(productId)
            {
              var spanElement = document.getElementById(`${productId}-message`);	
              spanElement.innerText = 'Message: Drafting';
              var xhr = new XMLHttpRequest();
                xhr.addEventListener("readystatechange", function() {
                  if(this.readyState === 4) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Drafted';
                    } else {
                      // Request failed or returned an error (status code not in 2xx range)
                      console.error('Request failed:', xhr.status);
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Error while drafting';
                    }
                  }
                });
            
                xhr.open("PUT", `https://ipp-apps.onrender.com/products/${productId}/draft`);
                xhr.send();
            }
          
          function TagRemove(productId)
            {
              var spanElement = document.getElementById(`${productId}-message`);	
              spanElement.innerText = 'Message: Removing tag';
                var xhr = new XMLHttpRequest();
                
                xhr.addEventListener("readystatechange", function() {
                  if(this.readyState === 4) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Tag removed';
                    } else {
                      // Request failed or returned an error (status code not in 2xx range)
                      console.error('Request failed:', xhr.status);
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Error while removing tag';
                    }
                  }
                });
                const payload = {
                  tag: 'Diwali Looks'
                };
                xhr.open("PUT", `https://ipp-apps.onrender.com/products/${productId}/remove-tag`);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify(payload));
            }
          
           function TagAdd(productId)
            {
              var spanElement = document.getElementById(`${productId}-message`);	
              spanElement.innerText = 'Message: Adding tag';
                var xhr = new XMLHttpRequest();
                
                xhr.addEventListener("readystatechange", function() {
                  if(this.readyState === 4) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Tag added';
                    } else {
                      // Request failed or returned an error (status code not in 2xx range)
                      console.error('Request failed:', xhr.status);
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Error while adding tag';
                    }
                  }
                });
                const payload = {
                  newTag: 'Diwali Looks'
                };
                xhr.open("PUT", `https://ipp-apps.onrender.com/products/${productId}/tag`);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify(payload));
            }
      
            function CollectionAdd(productId)
            {
              var spanElement = document.getElementById(`${productId}-message`);	
              spanElement.innerText = 'Message: Adding to collection';
                var xhr = new XMLHttpRequest();
                
                xhr.addEventListener("readystatechange", function() {
                  if(this.readyState === 4) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Added to collection';
                    } else {
                      // Request failed or returned an error (status code not in 2xx range)
                      console.error('Request failed:', xhr.status);
                      console.log('Response:', xhr.responseText);
                      spanElement.innerText = 'Message: Error while adding to collection';
                    }
                  }
                });
                const payload = {
                  "productId": productId,
                  "collectionId": 439428940014
                };

                xhr.open("PUT", `https://ipp-apps.onrender.com/add-product-to-collection`);
                xhr.setRequestHeader('Content-Type', 'application/json');
                xhr.send(JSON.stringify(payload));
            }
    </script>
  </body>
  <link
    rel="preload"
    fetchpriority="low"
    href="{{ 'theme-deferred.css' | asset_url }}"
    as="style"
    onload="this.onload=null;this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="{{ 'theme-deferred.css' | asset_url }}"></noscript>
</html>